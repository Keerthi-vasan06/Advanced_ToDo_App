{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KEERTHI VASAN\\\\Desktop\\\\Advanced-To-Do-App-with-calender-and-remainders\\\\reactapp\\\\src\\\\context\\\\ReminderContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReminderContext = /*#__PURE__*/createContext();\nexport const ReminderProvider = ({\n  children\n}) => {\n  _s();\n  const [reminders, setReminders] = useState(() => {\n    const stored = localStorage.getItem(\"reminders\");\n    return stored ? JSON.parse(stored) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"reminders\", JSON.stringify(reminders));\n  }, [reminders]);\n  const addReminder = (taskId, reminder) => {\n    const newReminder = {\n      id: Date.now(),\n      taskId,\n      ...reminder\n    };\n    setReminders(prev => [...prev, newReminder]);\n  };\n  const updateReminder = (id, updated) => {\n    setReminders(prev => prev.map(r => r.id === id ? {\n      ...r,\n      ...updated\n    } : r));\n  };\n  const deleteReminder = id => {\n    setReminders(prev => prev.filter(r => r.id !== id));\n  };\n  const getRemindersByTask = taskId => {\n    return reminders.filter(r => r.taskId === taskId);\n  };\n  return /*#__PURE__*/_jsxDEV(ReminderContext.Provider, {\n    value: {\n      reminders,\n      addReminder,\n      updateReminder,\n      deleteReminder,\n      getRemindersByTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ReminderProvider, \"bIk+bGt2rZhWCOaxuVupXz6vcm4=\");\n_c = ReminderProvider;\nexport const useReminder = () => {\n  _s2();\n  return useContext(ReminderContext);\n};\n_s2(useReminder, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ReminderProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ReminderContext","ReminderProvider","children","_s","reminders","setReminders","stored","localStorage","getItem","JSON","parse","setItem","stringify","addReminder","taskId","reminder","newReminder","id","Date","now","prev","updateReminder","updated","map","r","deleteReminder","filter","getRemindersByTask","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useReminder","_s2","$RefreshReg$"],"sources":["C:/Users/KEERTHI VASAN/Desktop/Advanced-To-Do-App-with-calender-and-remainders/reactapp/src/context/ReminderContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst ReminderContext = createContext();\r\n\r\nexport const ReminderProvider = ({ children }) => {\r\n  const [reminders, setReminders] = useState(() => {\r\n    \r\n    const stored = localStorage.getItem(\"reminders\");\r\n    return stored ? JSON.parse(stored) : [];\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"reminders\", JSON.stringify(reminders));\r\n  }, [reminders]);\r\n\r\n  const addReminder = (taskId, reminder) => {\r\n    const newReminder = {\r\n      id: Date.now(), \r\n      taskId,\r\n      ...reminder,\r\n    };\r\n    setReminders((prev) => [...prev, newReminder]);\r\n  };\r\n\r\n  const updateReminder = (id, updated) => {\r\n    setReminders((prev) =>\r\n      prev.map((r) => (r.id === id ? { ...r, ...updated } : r))\r\n    );\r\n  };\r\n\r\n  const deleteReminder = (id) => {\r\n    setReminders((prev) => prev.filter((r) => r.id !== id));\r\n  };\r\n\r\n  const getRemindersByTask = (taskId) => {\r\n    return reminders.filter((r) => r.taskId === taskId);\r\n  };\r\n\r\n  return (\r\n    <ReminderContext.Provider\r\n      value={{ reminders, addReminder, updateReminder, deleteReminder, getRemindersByTask }}\r\n    >\r\n      {children}\r\n    </ReminderContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useReminder = () => useContext(ReminderContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAE/C,MAAMU,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAChD,OAAOF,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,EAAE;EACzC,CAAC,CAAC;EAGFT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACR,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMS,WAAW,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IACxC,MAAMC,WAAW,GAAG;MAClBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdL,MAAM;MACN,GAAGC;IACL,CAAC;IACDV,YAAY,CAAEe,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEJ,WAAW,CAAC,CAAC;EAChD,CAAC;EAED,MAAMK,cAAc,GAAGA,CAACJ,EAAE,EAAEK,OAAO,KAAK;IACtCjB,YAAY,CAAEe,IAAI,IAChBA,IAAI,CAACG,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,CAAC;MAAE,GAAGF;IAAQ,CAAC,GAAGE,CAAE,CAC1D,CAAC;EACH,CAAC;EAED,MAAMC,cAAc,GAAIR,EAAE,IAAK;IAC7BZ,YAAY,CAAEe,IAAI,IAAKA,IAAI,CAACM,MAAM,CAAEF,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EACzD,CAAC;EAED,MAAMU,kBAAkB,GAAIb,MAAM,IAAK;IACrC,OAAOV,SAAS,CAACsB,MAAM,CAAEF,CAAC,IAAKA,CAAC,CAACV,MAAM,KAAKA,MAAM,CAAC;EACrD,CAAC;EAED,oBACEf,OAAA,CAACC,eAAe,CAAC4B,QAAQ;IACvBC,KAAK,EAAE;MAAEzB,SAAS;MAAES,WAAW;MAAEQ,cAAc;MAAEI,cAAc;MAAEE;IAAmB,CAAE;IAAAzB,QAAA,EAErFA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAC9B,EAAA,CA1CWF,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AA4C7B,OAAO,MAAMkC,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzC,UAAU,CAACK,eAAe,CAAC;AAAA;AAACoC,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}