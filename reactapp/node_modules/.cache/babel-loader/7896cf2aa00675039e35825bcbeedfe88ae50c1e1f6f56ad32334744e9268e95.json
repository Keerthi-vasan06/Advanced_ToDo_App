{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KEERTHI VASAN\\\\Desktop\\\\Advanced-To-Do-App-with-calender-and-remainders\\\\reactapp\\\\src\\\\pages\\\\DashboardUser.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import Sidebar from \"../components/Sidebar\";\n// import TaskForm from \"../components/TaskForm\";\n// import { useAuth } from \"../context/AuthContext.jsx\";\n// import { getTasks, addTask, deleteTask, updateTask } from \"../api\";\n// import { getReminders, addReminder as apiAddReminder, updateReminder as apiUpdateReminder, deleteReminder as apiDeleteReminder } from \"../api\";\n\n// export default function DashboardUser() {\n//   const { user, logout } = useAuth();\n//   const userId = user?.id;\n//   const navigate = useNavigate();\n\n//   const [tasks, setTasks] = useState([]);\n//   const [reminders, setReminders] = useState([]);\n\n//   const [editingTaskId, setEditingTaskId] = useState(null);\n//   const [editTitle, setEditTitle] = useState(\"\");\n//   const [editDesc, setEditDesc] = useState(\"\");\n//   const [editDeadline, setEditDeadline] = useState(\"\");\n//   const [editPriority, setEditPriority] = useState(\"\");\n//   const [editStatus, setEditStatus] = useState(\"\");\n\n//   const [editingReminderId, setEditingReminderId] = useState(null);\n//   const [editReminderTitle, setEditReminderTitle] = useState(\"\");\n//   const [editReminderDate, setEditReminderDate] = useState(\"\");\n//   const [editReminderTaskId, setEditReminderTaskId] = useState(\"\");\n\n//   const [newReminderTitle, setNewReminderTitle] = useState(\"\");\n//   const [newReminderDate, setNewReminderDate] = useState(\"\");\n//   const [newReminderTaskId, setNewReminderTaskId] = useState(\"\");\n\n//   const [filterDate, setFilterDate] = useState(\"\");\n//   const [filterPriority, setFilterPriority] = useState(\"\");\n//   const [filterStatus, setFilterStatus] = useState(\"\");\n\n//   useEffect(() => {\n//     if (!userId) return;\n\n//     const fetchTasks = async () => {\n//       try {\n//         const response = await getTasks(userId);\n//         const fetchedTasks = Array.isArray(response.data) ? response.data : [];\n//         setTasks(fetchedTasks);\n//       } catch (error) {\n//         console.error(\"Error fetching tasks:\", error);\n//         setTasks([]);\n//       }\n//     };\n\n//     fetchTasks();\n//   }, [userId]);\n\n//   const handleTaskAdded = async (newTask) => {\n//     try {\n//       await addTask(userId, newTask);\n//       const response = await getTasks(userId);\n//       setTasks(Array.isArray(response.data) ? response.data : []);\n//     } catch (error) {\n//       console.error(\"Error adding task:\", error);\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\n//     try {\n//       await deleteTask(userId, taskId);\n//       setTasks(tasks.filter((t) => t.id !== taskId));\n//       setReminders(reminders.filter((r) => r.taskId !== taskId)); // remove related reminders\n//     } catch (error) {\n//       console.error(\"Error deleting task:\", error);\n//       alert(\"Failed to delete task\");\n//     }\n//   };\n\n//   const startEditTask = (task) => {\n//     setEditingTaskId(task.id);\n//     setEditTitle(task.title);\n//     setEditDesc(task.description);\n//     setEditDeadline(task.deadline_date);\n//     setEditPriority(task.priority);\n//     setEditStatus(task.status);\n//   };\n\n//   const saveEditTask = async (taskId) => {\n//     try {\n//       await updateTask(userId, taskId, {\n//         title: editTitle,\n//         description: editDesc,\n//         deadline_date: editDeadline,\n//         priority: editPriority,\n//         status: editStatus,\n//       });\n//       setTasks(tasks.map((t) =>\n//         t.id === taskId\n//           ? { ...t, title: editTitle, description: editDesc, deadline_date: editDeadline, priority: editPriority, status: editStatus }\n//           : t\n//       ));\n//       setEditingTaskId(null);\n//     } catch (error) {\n//       console.error(\"Error updating task:\", error);\n//       alert(\"Failed to update task\");\n//     }\n//   };\n\n//   const handleAddReminder = (e) => {\n//     e.preventDefault();\n//     if (!newReminderTitle.trim() || !newReminderDate || !newReminderTaskId) {\n//       alert(\"Please enter title, date, and select a task.\");\n//       return;\n//     }\n\n//     const newReminder = {\n//       id: Date.now(), \n//       title: newReminderTitle.trim(),\n//       date: newReminderDate,\n//       taskId: Number(newReminderTaskId),\n//     };\n\n//     setReminders([...reminders, newReminder]);\n//     setNewReminderTitle(\"\");\n//     setNewReminderDate(\"\");\n//     setNewReminderTaskId(\"\");\n//   };\n\n//   const handleDeleteReminder = (reminderId) => {\n//     if (!window.confirm(\"Are you sure you want to delete this reminder?\")) return;\n//     setReminders(reminders.filter((r) => r.id !== reminderId));\n//   };\n\n//   const startEditReminder = (reminder) => {\n//     setEditingReminderId(reminder.id);\n//     setEditReminderTitle(reminder.title);\n//     setEditReminderDate(reminder.date);\n//     setEditReminderTaskId(reminder.taskId);\n//   };\n\n//   const saveEditReminder = (reminderId) => {\n//     if (!editReminderTitle.trim() || !editReminderDate || !editReminderTaskId) {\n//       alert(\"Please enter title, date, and select a task.\");\n//       return;\n//     }\n\n//     setReminders(reminders.map((r) =>\n//       r.id === reminderId\n//         ? { ...r, title: editReminderTitle, date: editReminderDate, taskId: Number(editReminderTaskId) }\n//         : r\n//     ));\n//     setEditingReminderId(null);\n//   };\n\n//   const stats = useMemo(() => {\n//     const total = tasks.length;\n//     const pending = tasks.filter((t) => t.status === \"PENDING\").length;\n//     const complete = tasks.filter((t) => t.status === \"COMPLETE\").length;\n//     const overdue = tasks.filter((t) => t.deadline_date && t.status !== \"COMPLETE\" && new Date(t.deadline_date) < new Date()).length;\n//     return { total, pending, complete, overdue };\n//   }, [tasks]);\n\n//   const filteredTasks = tasks.filter((t) => {\n//     const matchDate = filterDate ? t.deadline_date === filterDate : true;\n//     const matchPriority = filterPriority ? t.priority === filterPriority : true;\n//     const matchStatus = filterStatus ? t.status === filterStatus : true;\n//     return matchDate && matchPriority && matchStatus;\n//   });\n\n//   return (\n//     <div style={{ display: \"flex\", minHeight: \"100vh\" }}>\n//       <Sidebar />\n//       <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n//         {/* Header */}\n//         <div style={{ width: \"100%\", padding: \"1rem 1rem\", backgroundColor: \"#3D5AFE\", color: \"#fff\", fontSize: \"1.2rem\", fontWeight: \"bold\", boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\", position: \"sticky\", top: 0, zIndex: 1000, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n//           <span>User Dashboard</span>\n//           <button \n//       onClick={() => { logout(); navigate(\"/login\"); }} \n//       style={{ \n//         backgroundColor: \"#ff4d4d\", \n//         color: \"#fff\", \n//         border: \"none\", \n//         padding: \"0.5rem 1rem\", \n//         borderRadius: \"8px\", \n//         cursor: \"pointer\", \n//         fontWeight: \"500\", \n//         boxShadow: \"0 2px 6px rgba(0,0,0,0.15)\" \n//       }}\n//     >\n//       Logout\n//     </button>\n//         </div>\n\n//         <main style={{ flex: 1, padding: \"2rem\", backgroundColor: \"#f5f7ff\", minHeight: \"100vh\" }}>\n//           <h2 style={{ color: \"#3D5AFE\", marginBottom: \"1.5rem\" }}>Hello, {user?.name}</h2>\n\n//           {/* Stats */}\n//           <div style={{ display: \"flex\", gap: \"1.5rem\", marginBottom: \"2rem\", flexWrap: \"wrap\" }}>\n//             {[{ label: \"Total Tasks\", value: stats.total }, { label: \"Pending\", value: stats.pending }, { label: \"Completed\", value: stats.complete }, { label: \"Overdue\", value: stats.overdue }].map((s, idx) => (\n//               <div key={idx} style={{ backgroundColor: \"#fff\", padding: \"1.5rem\", borderRadius: \"10px\", flex: \"1 1 200px\", boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\", textAlign: \"center\", transition: \"transform 0.2s\" }}>\n//                 <div style={{ fontSize: \"2rem\", fontWeight: \"bold\", color: \"#3D5AFE\" }}>{s.value}</div>\n//                 <div style={{ color: \"#666\", marginTop: \"0.5rem\" }}>{s.label}</div>\n//               </div>\n//             ))}\n//           </div>\n\n//           {/* Filter Section */}\n//           <div style={{ backgroundColor: \"#fff\", padding: \"1rem\", borderRadius: \"10px\", marginBottom: \"1.5rem\", display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\", alignItems: \"center\" }}>\n//             <input type=\"date\" value={filterDate} onChange={(e) => setFilterDate(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} />\n//             <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}>\n//               <option value=\"\">All Priorities</option>\n//               <option value=\"LOW\">LOW</option>\n//               <option value=\"MEDIUM\">MEDIUM</option>\n//               <option value=\"HIGH\">HIGH</option>\n//             </select>\n//             <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}>\n//               <option value=\"\">All Status</option>\n//               <option value=\"PENDING\">PENDING</option>\n//               <option value=\"COMPLETE\">COMPLETE</option>\n//               <option value=\"INCOMPLETE\">INCOMPLETE</option>\n//             </select>\n//             <button onClick={() => { setFilterDate(\"\"); setFilterPriority(\"\"); setFilterStatus(\"\"); }} style={{ backgroundColor: \"#FFA500\", color: \"#fff\", border: \"none\", padding: \"0.5rem 1rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Clear Filters</button>\n//           </div>\n\n//           {/* Tasks Section */}\n//           <div style={{ backgroundColor: \"#fff\", padding: \"1.5rem\", borderRadius: \"10px\", boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\", marginBottom: \"2rem\" }}>\n//             <h3 style={{ color: \"#3D5AFE\", marginBottom: \"1rem\" }}>Your Tasks</h3>\n//             <div style={{ marginBottom: \"1.5rem\" }}>\n//               <TaskForm userId={userId} onTaskAdded={handleTaskAdded} />\n//             </div>\n//             <table border=\"0\" cellPadding=\"8\" style={{ width: \"100%\", borderCollapse: \"collapse\", textAlign: \"center\", minWidth: \"600px\" }}>\n//               <thead style={{ backgroundColor: \"#3D5AFE\", color: \"#fff\" }}>\n//                 <tr>\n//                   <th>Title</th>\n//                   <th>Description</th>\n//                   <th>Deadline</th>\n//                   <th>Priority</th>\n//                   <th>Status</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredTasks.length === 0 && <tr><td colSpan=\"6\" style={{ textAlign: \"center\", padding: \"1rem\" }}>No tasks found</td></tr>}\n//                 {filteredTasks.map((task) => (\n//                   <tr key={task.id} style={{ borderBottom: \"1px solid #eee\" }}>\n//                     <td>{editingTaskId === task.id ? <input value={editTitle} onChange={(e) => setEditTitle(e.target.value)} /> : task.title}</td>\n//                     <td>{editingTaskId === task.id ? <input value={editDesc} onChange={(e) => setEditDesc(e.target.value)} /> : task.description}</td>\n//                     <td>{editingTaskId === task.id ? <input type=\"date\" value={editDeadline} onChange={(e) => setEditDeadline(e.target.value)} /> : task.deadline_date}</td>\n//                     <td>{editingTaskId === task.id ? <select value={editPriority} onChange={(e) => setEditPriority(e.target.value)}><option>LOW</option><option>MEDIUM</option><option>HIGH</option></select> : task.priority}</td>\n//                     <td>{editingTaskId === task.id ? <select value={editStatus} onChange={(e) => setEditStatus(e.target.value)}><option>PENDING</option><option>COMPLETE</option><option>INCOMPLETE</option></select> : task.status}</td>\n//                     <td>\n//                       {editingTaskId === task.id ? (\n//                         <>\n//                           <button onClick={() => saveEditTask(task.id)} style={{ backgroundColor: \"#4CAF50\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Save</button>\n//                           <button onClick={() => setEditingTaskId(null)} style={{ backgroundColor: \"#aaa\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Cancel</button>\n//                         </>\n//                       ) : (\n//                         <>\n//                           <button onClick={() => startEditTask(task)} style={{ backgroundColor: \"#FFA500\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Edit</button>\n//                           <button onClick={() => handleDeleteTask(task.id)} style={{ backgroundColor: \"#ff4d4d\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Delete</button>\n//                         </>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n\n//           {/* Reminders Section */}\n//           <div style={{ backgroundColor: \"#fff\", padding: \"1.5rem\", borderRadius: \"10px\", boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\" }}>\n//             <h3 style={{ color: \"#3D5AFE\", marginBottom: \"1rem\" }}>Your Reminders</h3>\n\n//             {/* Inline Add Reminder Form */}\n//             <form onSubmit={handleAddReminder} style={{ display: \"flex\", gap: \"0.5rem\", marginBottom: \"1rem\" }}>\n//               <input type=\"text\" placeholder=\"Reminder title\" value={newReminderTitle} onChange={(e) => setNewReminderTitle(e.target.value)} style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} required />\n//               <input type=\"date\" value={newReminderDate} onChange={(e) => setNewReminderDate(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} required />\n//               <select value={newReminderTaskId} onChange={(e) => setNewReminderTaskId(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} required>\n//                 <option value=\"\">Select Task</option>\n//                 {tasks.map((task) => <option key={task.id} value={task.id}>{task.title}</option>)}\n//               </select>\n//               <button type=\"submit\" style={{ backgroundColor: \"#4CAF50\", color: \"#fff\", border: \"none\", padding: \"0.5rem 1rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Add</button>\n//             </form>\n\n//             <table border=\"0\" cellPadding=\"8\" style={{ width: \"100%\", borderCollapse: \"collapse\", textAlign: \"center\", minWidth: \"400px\" }}>\n//               <thead style={{ backgroundColor: \"#3D5AFE\", color: \"#fff\" }}>\n//                 <tr>\n//                   <th>Title</th>\n//                   <th>Date</th>\n//                   <th>Task</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {reminders.length === 0 && <tr><td colSpan=\"4\" style={{ textAlign: \"center\", padding: \"1rem\" }}>No reminders found</td></tr>}\n//                 {reminders.map((reminder) => {\n//                   const taskName = tasks.find(t => t.id === reminder.taskId)?.title || \"Unknown\";\n//                   return (\n//                     <tr key={reminder.id} style={{ borderBottom: \"1px solid #eee\" }}>\n//                       <td>{editingReminderId === reminder.id ? <input value={editReminderTitle} onChange={(e) => setEditReminderTitle(e.target.value)} /> : reminder.title}</td>\n//                       <td>{editingReminderId === reminder.id ? <input type=\"date\" value={editReminderDate} onChange={(e) => setEditReminderDate(e.target.value)} /> : reminder.date}</td>\n//                       <td>{editingReminderId === reminder.id ? (\n//                         <select value={editReminderTaskId} onChange={(e) => setEditReminderTaskId(e.target.value)}>\n//                           <option value=\"\">Select Task</option>\n//                           {tasks.map((task) => <option key={task.id} value={task.id}>{task.title}</option>)}\n//                         </select>\n//                       ) : taskName}</td>\n//                       <td>\n//                         {editingReminderId === reminder.id ? (\n//                           <>\n//                             <button onClick={() => saveEditReminder(reminder.id)} style={{ backgroundColor: \"#4CAF50\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Save</button>\n//                             <button onClick={() => setEditingReminderId(null)} style={{ backgroundColor: \"#aaa\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Cancel</button>\n//                           </>\n//                         ) : (\n//                           <>\n//                             <button onClick={() => startEditReminder(reminder)} style={{ backgroundColor: \"#FFA500\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Edit</button>\n//                             <button onClick={() => handleDeleteReminder(reminder.id)} style={{ backgroundColor: \"#ff4d4d\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Delete</button>\n//                           </>\n//                         )}\n//                       </td>\n//                     </tr>\n//                   );\n//                 })}\n//               </tbody>\n//             </table>\n//           </div>\n//         </main>\n\n//         {/* Footer */}\n//         <div style={{ marginTop: \"auto\", textAlign: \"center\", padding: \"1rem\", backgroundColor: \"#3D5AFE\", color: \"#fff\", borderRadius: \"10px\" }}>\n//           © {new Date().getFullYear()} Tasky | Built with ❤️\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport TaskForm from \"../components/TaskForm\";\nimport { useAuth } from \"../context/AuthContext.jsx\";\nimport { getTasks, addTask, deleteTask, updateTask, getReminders, addReminder as apiAddReminder, updateReminder as apiUpdateReminder, deleteReminder as apiDeleteReminder } from \"../api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DashboardUser() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const userId = user === null || user === void 0 ? void 0 : user.id;\n  const navigate = useNavigate();\n  const [tasks, setTasks] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editDesc, setEditDesc] = useState(\"\");\n  const [editDeadline, setEditDeadline] = useState(\"\");\n  const [editPriority, setEditPriority] = useState(\"\");\n  const [editStatus, setEditStatus] = useState(\"\");\n  const [editingReminderId, setEditingReminderId] = useState(null);\n  const [editReminderTitle, setEditReminderTitle] = useState(\"\");\n  const [editReminderDate, setEditReminderDate] = useState(\"\");\n  const [editReminderTaskId, setEditReminderTaskId] = useState(\"\");\n  const [newReminderTitle, setNewReminderTitle] = useState(\"\");\n  const [newReminderDate, setNewReminderDate] = useState(\"\");\n  const [newReminderTaskId, setNewReminderTaskId] = useState(\"\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const [filterPriority, setFilterPriority] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n  const [selectedTaskId, setSelectedTaskId] = useState(\"\");\n\n  // Fetch tasks\n  useEffect(() => {\n    if (!userId) return;\n    const fetchTasksAndReminders = async () => {\n      try {\n        const response = await getTasks(userId);\n        const fetchedTasks = Array.isArray(response.data) ? response.data : [];\n        setTasks(fetchedTasks);\n\n        // Automatically fetch reminders for all tasks\n        const allReminders = [];\n        for (const task of fetchedTasks) {\n          const reminderRes = await getReminders(task.id);\n          if (Array.isArray(reminderRes.data)) {\n            // Attach task_id to each reminder explicitly\n            const remindersWithTask = reminderRes.data.map(r => ({\n              ...r,\n              task_id: task.id\n            }));\n            setRemin;\n            allReminders.push(...remindersWithTask);\n          }\n        }\n        setReminders(allReminders);\n      } catch (error) {\n        console.error(\"Error fetching tasks or reminders:\", error);\n        setTasks([]);\n        setReminders([]);\n      }\n    };\n    fetchTasksAndReminders();\n  }, [userId]);\n\n  // Fetch reminders\n  // Fetch reminders for a specific task\n  const fetchRemindersForTask = async taskId => {\n    if (!taskId) return;\n    try {\n      const response = await getReminders(taskId); // fetch by taskId\n      setReminders(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error(\"Error fetching reminders:\", error);\n      setReminders([]);\n    }\n  };\n\n  // Task handlers\n  const handleTaskAdded = async newTask => {\n    try {\n      await addTask(userId, newTask);\n      const response = await getTasks(userId);\n      setTasks(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\n    try {\n      await deleteTask(userId, taskId);\n      setTasks(tasks.filter(t => t.id !== taskId));\n      setReminders(reminders.filter(r => r.task_id !== taskId));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      alert(\"Failed to delete task\");\n    }\n  };\n  const startEditTask = task => {\n    setEditingTaskId(task.id);\n    setEditTitle(task.title);\n    setEditDesc(task.description);\n    setEditDeadline(task.deadline_date);\n    setEditPriority(task.priority);\n    setEditStatus(task.status);\n  };\n  const saveEditTask = async taskId => {\n    try {\n      await updateTask(userId, taskId, {\n        title: editTitle,\n        description: editDesc,\n        deadline_date: editDeadline,\n        priority: editPriority,\n        status: editStatus\n      });\n      const response = await getTasks(userId);\n      setTasks(Array.isArray(response.data) ? response.data : []);\n      setEditingTaskId(null);\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n      alert(\"Failed to update task\");\n    }\n  };\n\n  // Reminder handlers\n  const handleAddReminder = async e => {\n    e.preventDefault();\n    if (!newReminderTitle.trim() || !newReminderDate || !newReminderTaskId) {\n      alert(\"Please enter title, date, and select a task.\");\n      return;\n    }\n    const newReminder = {\n      reminder_date: newReminderDate,\n      message: newReminderTitle,\n      status: \"PENDING\"\n    };\n    try {\n      await apiAddReminder(Number(newReminderTaskId), newReminder); // taskId-based\n      await fetchRemindersForTask(Number(newReminderTaskId)); // refresh reminders\n      setNewReminderTitle(\"\");\n      setNewReminderDate(\"\");\n      setNewReminderTaskId(\"\");\n    } catch (error) {\n      console.error(\"Error adding reminder:\", error);\n      alert(\"Failed to add reminder\");\n    }\n  };\n  const handleDeleteReminder = async reminder => {\n    const taskId = Number(reminder.task_id);\n    if (!taskId) {\n      console.error(\"Invalid taskId for reminder:\", reminder);\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to delete this reminder?\")) return;\n    try {\n      await apiDeleteReminder(taskId, reminder.id);\n      await fetchRemindersForTask(reminder.task_id);\n    } catch (error) {\n      console.error(\"Error deleting reminder:\", error);\n      alert(\"Failed to delete reminder\");\n    }\n  };\n  const startEditReminder = reminder => {\n    var _reminder$task_id;\n    setEditingReminderId(reminder.id);\n    setEditReminderTitle(reminder.message);\n    setEditReminderDate(reminder.reminder_date);\n    setEditReminderTaskId((_reminder$task_id = reminder.task_id) !== null && _reminder$task_id !== void 0 ? _reminder$task_id : \"\");\n  };\n  const saveEditReminder = async reminderId => {\n    const taskId = Number(editReminderTaskId);\n    if (!taskId) {\n      alert(\"Please select a valid task for this reminder.\");\n      return;\n    }\n    const updatedReminder = {\n      message: editReminderTitle,\n      reminder_date: editReminderDate,\n      task: Number(editReminderTaskId),\n      // <-- send just the ID\n      status: \"PENDING\"\n    };\n    try {\n      await apiUpdateReminder(Number(editReminderTaskId), reminderId, updatedReminder);\n      await fetchRemindersForTask(Number(editReminderTaskId)); // refresh reminders \n      setEditingReminderId(null);\n    } catch (error) {\n      console.error(\"Error updating reminder:\", error);\n      alert(\"Failed to update reminder\");\n    }\n  };\n  const handleTaskSelection = taskId => {\n    setSelectedTaskId(taskId);\n    fetchRemindersForTask(taskId);\n  };\n\n  // Stats\n  const stats = useMemo(() => {\n    const total = tasks.length;\n    const pending = tasks.filter(t => t.status === \"PENDING\").length;\n    const complete = tasks.filter(t => t.status === \"COMPLETE\").length;\n    const overdue = tasks.filter(t => t.deadline_date && t.status !== \"COMPLETE\" && new Date(t.deadline_date) < new Date()).length;\n    return {\n      total,\n      pending,\n      complete,\n      overdue\n    };\n  }, [tasks]);\n  const filteredTasks = tasks.filter(t => {\n    const matchDate = filterDate ? t.deadline_date === filterDate : true;\n    const matchPriority = filterPriority ? t.priority === filterPriority : true;\n    const matchStatus = filterStatus ? t.status === filterStatus : true;\n    return matchDate && matchPriority && matchStatus;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          padding: \"1rem 1rem\",\n          backgroundColor: \"#3D5AFE\",\n          color: \"#fff\",\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n          position: \"sticky\",\n          top: 0,\n          zIndex: 1000,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"User Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            logout();\n            navigate(\"/login\");\n          },\n          style: {\n            backgroundColor: \"#ff4d4d\",\n            color: \"#fff\",\n            border: \"none\",\n            padding: \"0.5rem 1rem\",\n            borderRadius: \"8px\",\n            cursor: \"pointer\",\n            fontWeight: \"500\",\n            boxShadow: \"0 2px 6px rgba(0,0,0,0.15)\"\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          flex: 1,\n          padding: \"2rem\",\n          backgroundColor: \"#f5f7ff\",\n          minHeight: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#3D5AFE\",\n            marginBottom: \"1.5rem\"\n          },\n          children: [\"Hello, \", user === null || user === void 0 ? void 0 : user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"1.5rem\",\n            marginBottom: \"2rem\",\n            flexWrap: \"wrap\"\n          },\n          children: [{\n            label: \"Total Tasks\",\n            value: stats.total\n          }, {\n            label: \"Pending\",\n            value: stats.pending\n          }, {\n            label: \"Completed\",\n            value: stats.complete\n          }, {\n            label: \"Overdue\",\n            value: stats.overdue\n          }].map((s, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"#fff\",\n              padding: \"1.5rem\",\n              borderRadius: \"10px\",\n              flex: \"1 1 200px\",\n              boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\",\n              textAlign: \"center\",\n              transition: \"transform 0.2s\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"2rem\",\n                fontWeight: \"bold\",\n                color: \"#3D5AFE\"\n              },\n              children: s.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#666\",\n                marginTop: \"0.5rem\"\n              },\n              children: s.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#fff\",\n            padding: \"1rem\",\n            borderRadius: \"10px\",\n            marginBottom: \"1.5rem\",\n            display: \"flex\",\n            gap: \"1rem\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: filterDate,\n            onChange: e => setFilterDate(e.target.value),\n            style: {\n              padding: \"0.5rem\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterPriority,\n            onChange: e => setFilterPriority(e.target.value),\n            style: {\n              padding: \"0.5rem\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Priorities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"LOW\",\n              children: \"LOW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MEDIUM\",\n              children: \"MEDIUM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"HIGH\",\n              children: \"HIGH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterStatus,\n            onChange: e => setFilterStatus(e.target.value),\n            style: {\n              padding: \"0.5rem\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PENDING\",\n              children: \"PENDING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"COMPLETE\",\n              children: \"COMPLETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"INCOMPLETE\",\n              children: \"INCOMPLETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setFilterDate(\"\");\n              setFilterPriority(\"\");\n              setFilterStatus(\"\");\n            },\n            style: {\n              backgroundColor: \"#FFA500\",\n              color: \"#fff\",\n              border: \"none\",\n              padding: \"0.5rem 1rem\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\"\n            },\n            children: \"Clear Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#fff\",\n            padding: \"1.5rem\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\",\n            marginBottom: \"2rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"#3D5AFE\",\n              marginBottom: \"1rem\"\n            },\n            children: \"Your Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"1.5rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TaskForm, {\n              userId: userId,\n              onTaskAdded: handleTaskAdded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"0\",\n            cellPadding: \"8\",\n            style: {\n              width: \"100%\",\n              borderCollapse: \"collapse\",\n              textAlign: \"center\",\n              minWidth: \"600px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              style: {\n                backgroundColor: \"#3D5AFE\",\n                color: \"#fff\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [filteredTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"4\",\n                  style: {\n                    textAlign: \"center\",\n                    padding: \"1rem\"\n                  },\n                  children: \"No tasks found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this), filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  borderBottom: \"1px solid #eee\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: editTitle,\n                    onChange: e => setEditTitle(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 25\n                  }, this) : task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: editDesc,\n                    onChange: e => setEditDesc(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 25\n                  }, this) : task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: editDeadline,\n                    onChange: e => setEditDeadline(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 25\n                  }, this) : task.deadline_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: editPriority,\n                    onChange: e => setEditPriority(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"LOW\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 839,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"MEDIUM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"HIGH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 25\n                  }, this) : task.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: editStatus,\n                    onChange: e => setEditStatus(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"PENDING\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 853,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"COMPLETE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 854,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"INCOMPLETE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 855,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 25\n                  }, this) : task.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => saveEditTask(task.id),\n                      style: {\n                        backgroundColor: \"#4CAF50\",\n                        color: \"#fff\",\n                        border: \"none\",\n                        padding: \"0.4rem 0.8rem\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\",\n                        marginRight: \"0.3rem\"\n                      },\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 864,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setEditingTaskId(null),\n                      style: {\n                        backgroundColor: \"#aaa\",\n                        color: \"#fff\",\n                        border: \"none\",\n                        padding: \"0.4rem 0.8rem\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\"\n                      },\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 878,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => startEditTask(task),\n                      style: {\n                        backgroundColor: \"#FFA500\",\n                        color: \"#fff\",\n                        border: \"none\",\n                        padding: \"0.4rem 0.8rem\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\",\n                        marginRight: \"0.3rem\"\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 894,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteTask(task.id),\n                      style: {\n                        backgroundColor: \"#ff4d4d\",\n                        color: \"#fff\",\n                        border: \"none\",\n                        padding: \"0.4rem 0.8rem\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\"\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 908,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 21\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#fff\",\n            padding: \"1.5rem\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"#3D5AFE\",\n              marginBottom: \"1rem\"\n            },\n            children: \"Your Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddReminder,\n            style: {\n              display: \"flex\",\n              gap: \"0.5rem\",\n              marginBottom: \"1rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Reminder title\",\n              value: newReminderTitle,\n              onChange: e => setNewReminderTitle(e.target.value),\n              style: {\n                flex: 1,\n                padding: \"0.5rem\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ccc\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: newReminderDate,\n              onChange: e => setNewReminderDate(e.target.value),\n              style: {\n                flex: 1,\n                padding: \"0.5rem\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ccc\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newReminderTaskId,\n              onChange: e => setNewReminderTaskId(e.target.value),\n              style: {\n                flex: 1,\n                padding: \"0.5rem\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ccc\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 17\n              }, this), tasks.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t.id,\n                children: t.title\n              }, t.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                backgroundColor: \"#3D5AFE\",\n                color: \"#fff\",\n                border: \"none\",\n                padding: \"0.5rem 1rem\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"0\",\n            cellPadding: \"8\",\n            style: {\n              width: \"100%\",\n              borderCollapse: \"collapse\",\n              textAlign: \"center\",\n              minWidth: \"600px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              style: {\n                backgroundColor: \"#3D5AFE\",\n                color: \"#fff\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1017,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [reminders.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"4\",\n                  style: {\n                    textAlign: \"center\",\n                    padding: \"1rem\"\n                  },\n                  children: \"No reminders found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 19\n              }, this), reminders.map(rem => {\n                var _tasks$find;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    borderBottom: \"1px solid #eee\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: editingReminderId === rem.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: editReminderTitle,\n                      onChange: e => setEditReminderTitle(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1034,\n                      columnNumber: 25\n                    }, this) : rem.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: editingReminderId === rem.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"datetime-local\",\n                      value: editReminderDate,\n                      onChange: e => setEditReminderDate(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1044,\n                      columnNumber: 25\n                    }, this) : rem.reminder_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1042,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: editingReminderId === rem.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: editReminderTaskId || \"\",\n                      onChange: e => setEditReminderTaskId(e.target.value),\n                      children: tasks.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: t.id,\n                        children: t.title\n                      }, t.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1060,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 25\n                    }, this) : ((_tasks$find = tasks.find(t => t.id === rem.task_id)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.title) || \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1053,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: editingReminderId === rem.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => saveEditReminder(rem.id),\n                        style: {\n                          backgroundColor: \"#4CAF50\",\n                          color: \"#fff\",\n                          border: \"none\",\n                          padding: \"0.4rem 0.8rem\",\n                          borderRadius: \"5px\",\n                          cursor: \"pointer\",\n                          marginRight: \"0.3rem\"\n                        },\n                        children: \"Save\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1072,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => setEditingReminderId(null),\n                        style: {\n                          backgroundColor: \"#aaa\",\n                          color: \"#fff\",\n                          border: \"none\",\n                          padding: \"0.4rem 0.8rem\",\n                          borderRadius: \"5px\",\n                          cursor: \"pointer\"\n                        },\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1086,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => startEditReminder(rem),\n                        style: {\n                          backgroundColor: \"#FFA500\",\n                          color: \"#fff\",\n                          border: \"none\",\n                          padding: \"0.4rem 0.8rem\",\n                          borderRadius: \"5px\",\n                          cursor: \"pointer\",\n                          marginRight: \"0.3rem\"\n                        },\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1102,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteReminder(rem),\n                        style: {\n                          backgroundColor: \"#ff4d4d\",\n                          color: \"#fff\",\n                          border: \"none\",\n                          padding: \"0.4rem 0.8rem\",\n                          borderRadius: \"5px\",\n                          cursor: \"pointer\"\n                        },\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1116,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1069,\n                    columnNumber: 21\n                  }, this)]\n                }, rem.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1031,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"auto\",\n          textAlign: \"center\",\n          padding: \"1rem\",\n          backgroundColor: \"#3D5AFE\",\n          color: \"#fff\",\n          borderRadius: \"10px\"\n        },\n        children: [\"\\xA9 \", new Date().getFullYear(), \" Tasky | Built with \\u2764\\uFE0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardUser, \"77G3R9Ax6tkmcfdxUCw8DsG9F3o=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = DashboardUser;\nvar _c;\n$RefreshReg$(_c, \"DashboardUser\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","Sidebar","TaskForm","useAuth","getTasks","addTask","deleteTask","updateTask","getReminders","addReminder","apiAddReminder","updateReminder","apiUpdateReminder","deleteReminder","apiDeleteReminder","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardUser","_s","user","logout","userId","id","navigate","tasks","setTasks","reminders","setReminders","editingTaskId","setEditingTaskId","editTitle","setEditTitle","editDesc","setEditDesc","editDeadline","setEditDeadline","editPriority","setEditPriority","editStatus","setEditStatus","editingReminderId","setEditingReminderId","editReminderTitle","setEditReminderTitle","editReminderDate","setEditReminderDate","editReminderTaskId","setEditReminderTaskId","newReminderTitle","setNewReminderTitle","newReminderDate","setNewReminderDate","newReminderTaskId","setNewReminderTaskId","filterDate","setFilterDate","filterPriority","setFilterPriority","filterStatus","setFilterStatus","selectedTaskId","setSelectedTaskId","fetchTasksAndReminders","response","fetchedTasks","Array","isArray","data","allReminders","task","reminderRes","remindersWithTask","map","r","task_id","setRemin","push","error","console","fetchRemindersForTask","taskId","handleTaskAdded","newTask","handleDeleteTask","window","confirm","filter","t","alert","startEditTask","title","description","deadline_date","priority","status","saveEditTask","handleAddReminder","e","preventDefault","trim","newReminder","reminder_date","message","Number","handleDeleteReminder","reminder","startEditReminder","_reminder$task_id","saveEditReminder","reminderId","updatedReminder","handleTaskSelection","stats","total","length","pending","complete","overdue","Date","filteredTasks","matchDate","matchPriority","matchStatus","style","display","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","flex","flexDirection","width","padding","backgroundColor","color","fontSize","fontWeight","boxShadow","position","top","zIndex","justifyContent","alignItems","onClick","border","borderRadius","cursor","marginBottom","name","gap","flexWrap","label","value","s","idx","textAlign","transition","marginTop","type","onChange","target","onTaskAdded","cellPadding","borderCollapse","minWidth","colSpan","borderBottom","marginRight","onSubmit","placeholder","rem","_tasks$find","find","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/KEERTHI VASAN/Desktop/Advanced-To-Do-App-with-calender-and-remainders/reactapp/src/pages/DashboardUser.jsx"],"sourcesContent":["// import React, { useEffect, useState, useMemo } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Sidebar from \"../components/Sidebar\";\r\n// import TaskForm from \"../components/TaskForm\";\r\n// import { useAuth } from \"../context/AuthContext.jsx\";\r\n// import { getTasks, addTask, deleteTask, updateTask } from \"../api\";\r\n// import { getReminders, addReminder as apiAddReminder, updateReminder as apiUpdateReminder, deleteReminder as apiDeleteReminder } from \"../api\";\r\n\r\n\r\n// export default function DashboardUser() {\r\n//   const { user, logout } = useAuth();\r\n//   const userId = user?.id;\r\n//   const navigate = useNavigate();\r\n\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [reminders, setReminders] = useState([]);\r\n\r\n//   const [editingTaskId, setEditingTaskId] = useState(null);\r\n//   const [editTitle, setEditTitle] = useState(\"\");\r\n//   const [editDesc, setEditDesc] = useState(\"\");\r\n//   const [editDeadline, setEditDeadline] = useState(\"\");\r\n//   const [editPriority, setEditPriority] = useState(\"\");\r\n//   const [editStatus, setEditStatus] = useState(\"\");\r\n\r\n//   const [editingReminderId, setEditingReminderId] = useState(null);\r\n//   const [editReminderTitle, setEditReminderTitle] = useState(\"\");\r\n//   const [editReminderDate, setEditReminderDate] = useState(\"\");\r\n//   const [editReminderTaskId, setEditReminderTaskId] = useState(\"\");\r\n\r\n//   const [newReminderTitle, setNewReminderTitle] = useState(\"\");\r\n//   const [newReminderDate, setNewReminderDate] = useState(\"\");\r\n//   const [newReminderTaskId, setNewReminderTaskId] = useState(\"\");\r\n\r\n//   const [filterDate, setFilterDate] = useState(\"\");\r\n//   const [filterPriority, setFilterPriority] = useState(\"\");\r\n//   const [filterStatus, setFilterStatus] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     if (!userId) return;\r\n\r\n//     const fetchTasks = async () => {\r\n//       try {\r\n//         const response = await getTasks(userId);\r\n//         const fetchedTasks = Array.isArray(response.data) ? response.data : [];\r\n//         setTasks(fetchedTasks);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching tasks:\", error);\r\n//         setTasks([]);\r\n//       }\r\n//     };\r\n\r\n//     fetchTasks();\r\n//   }, [userId]);\r\n\r\n//   const handleTaskAdded = async (newTask) => {\r\n//     try {\r\n//       await addTask(userId, newTask);\r\n//       const response = await getTasks(userId);\r\n//       setTasks(Array.isArray(response.data) ? response.data : []);\r\n//     } catch (error) {\r\n//       console.error(\"Error adding task:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\r\n//     try {\r\n//       await deleteTask(userId, taskId);\r\n//       setTasks(tasks.filter((t) => t.id !== taskId));\r\n//       setReminders(reminders.filter((r) => r.taskId !== taskId)); // remove related reminders\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting task:\", error);\r\n//       alert(\"Failed to delete task\");\r\n//     }\r\n//   };\r\n\r\n//   const startEditTask = (task) => {\r\n//     setEditingTaskId(task.id);\r\n//     setEditTitle(task.title);\r\n//     setEditDesc(task.description);\r\n//     setEditDeadline(task.deadline_date);\r\n//     setEditPriority(task.priority);\r\n//     setEditStatus(task.status);\r\n//   };\r\n\r\n//   const saveEditTask = async (taskId) => {\r\n//     try {\r\n//       await updateTask(userId, taskId, {\r\n//         title: editTitle,\r\n//         description: editDesc,\r\n//         deadline_date: editDeadline,\r\n//         priority: editPriority,\r\n//         status: editStatus,\r\n//       });\r\n//       setTasks(tasks.map((t) =>\r\n//         t.id === taskId\r\n//           ? { ...t, title: editTitle, description: editDesc, deadline_date: editDeadline, priority: editPriority, status: editStatus }\r\n//           : t\r\n//       ));\r\n//       setEditingTaskId(null);\r\n//     } catch (error) {\r\n//       console.error(\"Error updating task:\", error);\r\n//       alert(\"Failed to update task\");\r\n//     }\r\n//   };\r\n\r\n//   const handleAddReminder = (e) => {\r\n//     e.preventDefault();\r\n//     if (!newReminderTitle.trim() || !newReminderDate || !newReminderTaskId) {\r\n//       alert(\"Please enter title, date, and select a task.\");\r\n//       return;\r\n//     }\r\n\r\n//     const newReminder = {\r\n//       id: Date.now(), \r\n//       title: newReminderTitle.trim(),\r\n//       date: newReminderDate,\r\n//       taskId: Number(newReminderTaskId),\r\n//     };\r\n\r\n//     setReminders([...reminders, newReminder]);\r\n//     setNewReminderTitle(\"\");\r\n//     setNewReminderDate(\"\");\r\n//     setNewReminderTaskId(\"\");\r\n//   };\r\n\r\n//   const handleDeleteReminder = (reminderId) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this reminder?\")) return;\r\n//     setReminders(reminders.filter((r) => r.id !== reminderId));\r\n//   };\r\n\r\n//   const startEditReminder = (reminder) => {\r\n//     setEditingReminderId(reminder.id);\r\n//     setEditReminderTitle(reminder.title);\r\n//     setEditReminderDate(reminder.date);\r\n//     setEditReminderTaskId(reminder.taskId);\r\n//   };\r\n\r\n//   const saveEditReminder = (reminderId) => {\r\n//     if (!editReminderTitle.trim() || !editReminderDate || !editReminderTaskId) {\r\n//       alert(\"Please enter title, date, and select a task.\");\r\n//       return;\r\n//     }\r\n\r\n//     setReminders(reminders.map((r) =>\r\n//       r.id === reminderId\r\n//         ? { ...r, title: editReminderTitle, date: editReminderDate, taskId: Number(editReminderTaskId) }\r\n//         : r\r\n//     ));\r\n//     setEditingReminderId(null);\r\n//   };\r\n\r\n//   const stats = useMemo(() => {\r\n//     const total = tasks.length;\r\n//     const pending = tasks.filter((t) => t.status === \"PENDING\").length;\r\n//     const complete = tasks.filter((t) => t.status === \"COMPLETE\").length;\r\n//     const overdue = tasks.filter((t) => t.deadline_date && t.status !== \"COMPLETE\" && new Date(t.deadline_date) < new Date()).length;\r\n//     return { total, pending, complete, overdue };\r\n//   }, [tasks]);\r\n\r\n//   const filteredTasks = tasks.filter((t) => {\r\n//     const matchDate = filterDate ? t.deadline_date === filterDate : true;\r\n//     const matchPriority = filterPriority ? t.priority === filterPriority : true;\r\n//     const matchStatus = filterStatus ? t.status === filterStatus : true;\r\n//     return matchDate && matchPriority && matchStatus;\r\n//   });\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", minHeight: \"100vh\" }}>\r\n//       <Sidebar />\r\n//       <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n//         {/* Header */}\r\n//         <div style={{ width: \"100%\", padding: \"1rem 1rem\", backgroundColor: \"#3D5AFE\", color: \"#fff\", fontSize: \"1.2rem\", fontWeight: \"bold\", boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\", position: \"sticky\", top: 0, zIndex: 1000, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n//           <span>User Dashboard</span>\r\n//           <button \r\n//       onClick={() => { logout(); navigate(\"/login\"); }} \r\n//       style={{ \r\n//         backgroundColor: \"#ff4d4d\", \r\n//         color: \"#fff\", \r\n//         border: \"none\", \r\n//         padding: \"0.5rem 1rem\", \r\n//         borderRadius: \"8px\", \r\n//         cursor: \"pointer\", \r\n//         fontWeight: \"500\", \r\n//         boxShadow: \"0 2px 6px rgba(0,0,0,0.15)\" \r\n//       }}\r\n//     >\r\n//       Logout\r\n//     </button>\r\n//         </div>\r\n\r\n//         <main style={{ flex: 1, padding: \"2rem\", backgroundColor: \"#f5f7ff\", minHeight: \"100vh\" }}>\r\n//           <h2 style={{ color: \"#3D5AFE\", marginBottom: \"1.5rem\" }}>Hello, {user?.name}</h2>\r\n\r\n//           {/* Stats */}\r\n//           <div style={{ display: \"flex\", gap: \"1.5rem\", marginBottom: \"2rem\", flexWrap: \"wrap\" }}>\r\n//             {[{ label: \"Total Tasks\", value: stats.total }, { label: \"Pending\", value: stats.pending }, { label: \"Completed\", value: stats.complete }, { label: \"Overdue\", value: stats.overdue }].map((s, idx) => (\r\n//               <div key={idx} style={{ backgroundColor: \"#fff\", padding: \"1.5rem\", borderRadius: \"10px\", flex: \"1 1 200px\", boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\", textAlign: \"center\", transition: \"transform 0.2s\" }}>\r\n//                 <div style={{ fontSize: \"2rem\", fontWeight: \"bold\", color: \"#3D5AFE\" }}>{s.value}</div>\r\n//                 <div style={{ color: \"#666\", marginTop: \"0.5rem\" }}>{s.label}</div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n\r\n//           {/* Filter Section */}\r\n//           <div style={{ backgroundColor: \"#fff\", padding: \"1rem\", borderRadius: \"10px\", marginBottom: \"1.5rem\", display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n//             <input type=\"date\" value={filterDate} onChange={(e) => setFilterDate(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} />\r\n//             <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}>\r\n//               <option value=\"\">All Priorities</option>\r\n//               <option value=\"LOW\">LOW</option>\r\n//               <option value=\"MEDIUM\">MEDIUM</option>\r\n//               <option value=\"HIGH\">HIGH</option>\r\n//             </select>\r\n//             <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}>\r\n//               <option value=\"\">All Status</option>\r\n//               <option value=\"PENDING\">PENDING</option>\r\n//               <option value=\"COMPLETE\">COMPLETE</option>\r\n//               <option value=\"INCOMPLETE\">INCOMPLETE</option>\r\n//             </select>\r\n//             <button onClick={() => { setFilterDate(\"\"); setFilterPriority(\"\"); setFilterStatus(\"\"); }} style={{ backgroundColor: \"#FFA500\", color: \"#fff\", border: \"none\", padding: \"0.5rem 1rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Clear Filters</button>\r\n//           </div>\r\n\r\n//           {/* Tasks Section */}\r\n//           <div style={{ backgroundColor: \"#fff\", padding: \"1.5rem\", borderRadius: \"10px\", boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\", marginBottom: \"2rem\" }}>\r\n//             <h3 style={{ color: \"#3D5AFE\", marginBottom: \"1rem\" }}>Your Tasks</h3>\r\n//             <div style={{ marginBottom: \"1.5rem\" }}>\r\n//               <TaskForm userId={userId} onTaskAdded={handleTaskAdded} />\r\n//             </div>\r\n//             <table border=\"0\" cellPadding=\"8\" style={{ width: \"100%\", borderCollapse: \"collapse\", textAlign: \"center\", minWidth: \"600px\" }}>\r\n//               <thead style={{ backgroundColor: \"#3D5AFE\", color: \"#fff\" }}>\r\n//                 <tr>\r\n//                   <th>Title</th>\r\n//                   <th>Description</th>\r\n//                   <th>Deadline</th>\r\n//                   <th>Priority</th>\r\n//                   <th>Status</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredTasks.length === 0 && <tr><td colSpan=\"6\" style={{ textAlign: \"center\", padding: \"1rem\" }}>No tasks found</td></tr>}\r\n//                 {filteredTasks.map((task) => (\r\n//                   <tr key={task.id} style={{ borderBottom: \"1px solid #eee\" }}>\r\n//                     <td>{editingTaskId === task.id ? <input value={editTitle} onChange={(e) => setEditTitle(e.target.value)} /> : task.title}</td>\r\n//                     <td>{editingTaskId === task.id ? <input value={editDesc} onChange={(e) => setEditDesc(e.target.value)} /> : task.description}</td>\r\n//                     <td>{editingTaskId === task.id ? <input type=\"date\" value={editDeadline} onChange={(e) => setEditDeadline(e.target.value)} /> : task.deadline_date}</td>\r\n//                     <td>{editingTaskId === task.id ? <select value={editPriority} onChange={(e) => setEditPriority(e.target.value)}><option>LOW</option><option>MEDIUM</option><option>HIGH</option></select> : task.priority}</td>\r\n//                     <td>{editingTaskId === task.id ? <select value={editStatus} onChange={(e) => setEditStatus(e.target.value)}><option>PENDING</option><option>COMPLETE</option><option>INCOMPLETE</option></select> : task.status}</td>\r\n//                     <td>\r\n//                       {editingTaskId === task.id ? (\r\n//                         <>\r\n//                           <button onClick={() => saveEditTask(task.id)} style={{ backgroundColor: \"#4CAF50\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Save</button>\r\n//                           <button onClick={() => setEditingTaskId(null)} style={{ backgroundColor: \"#aaa\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Cancel</button>\r\n//                         </>\r\n//                       ) : (\r\n//                         <>\r\n//                           <button onClick={() => startEditTask(task)} style={{ backgroundColor: \"#FFA500\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Edit</button>\r\n//                           <button onClick={() => handleDeleteTask(task.id)} style={{ backgroundColor: \"#ff4d4d\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Delete</button>\r\n//                         </>\r\n//                       )}\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n\r\n//           {/* Reminders Section */}\r\n//           <div style={{ backgroundColor: \"#fff\", padding: \"1.5rem\", borderRadius: \"10px\", boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\" }}>\r\n//             <h3 style={{ color: \"#3D5AFE\", marginBottom: \"1rem\" }}>Your Reminders</h3>\r\n\r\n//             {/* Inline Add Reminder Form */}\r\n//             <form onSubmit={handleAddReminder} style={{ display: \"flex\", gap: \"0.5rem\", marginBottom: \"1rem\" }}>\r\n//               <input type=\"text\" placeholder=\"Reminder title\" value={newReminderTitle} onChange={(e) => setNewReminderTitle(e.target.value)} style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} required />\r\n//               <input type=\"date\" value={newReminderDate} onChange={(e) => setNewReminderDate(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} required />\r\n//               <select value={newReminderTaskId} onChange={(e) => setNewReminderTaskId(e.target.value)} style={{ padding: \"0.5rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }} required>\r\n//                 <option value=\"\">Select Task</option>\r\n//                 {tasks.map((task) => <option key={task.id} value={task.id}>{task.title}</option>)}\r\n//               </select>\r\n//               <button type=\"submit\" style={{ backgroundColor: \"#4CAF50\", color: \"#fff\", border: \"none\", padding: \"0.5rem 1rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Add</button>\r\n//             </form>\r\n\r\n//             <table border=\"0\" cellPadding=\"8\" style={{ width: \"100%\", borderCollapse: \"collapse\", textAlign: \"center\", minWidth: \"400px\" }}>\r\n//               <thead style={{ backgroundColor: \"#3D5AFE\", color: \"#fff\" }}>\r\n//                 <tr>\r\n//                   <th>Title</th>\r\n//                   <th>Date</th>\r\n//                   <th>Task</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {reminders.length === 0 && <tr><td colSpan=\"4\" style={{ textAlign: \"center\", padding: \"1rem\" }}>No reminders found</td></tr>}\r\n//                 {reminders.map((reminder) => {\r\n//                   const taskName = tasks.find(t => t.id === reminder.taskId)?.title || \"Unknown\";\r\n//                   return (\r\n//                     <tr key={reminder.id} style={{ borderBottom: \"1px solid #eee\" }}>\r\n//                       <td>{editingReminderId === reminder.id ? <input value={editReminderTitle} onChange={(e) => setEditReminderTitle(e.target.value)} /> : reminder.title}</td>\r\n//                       <td>{editingReminderId === reminder.id ? <input type=\"date\" value={editReminderDate} onChange={(e) => setEditReminderDate(e.target.value)} /> : reminder.date}</td>\r\n//                       <td>{editingReminderId === reminder.id ? (\r\n//                         <select value={editReminderTaskId} onChange={(e) => setEditReminderTaskId(e.target.value)}>\r\n//                           <option value=\"\">Select Task</option>\r\n//                           {tasks.map((task) => <option key={task.id} value={task.id}>{task.title}</option>)}\r\n//                         </select>\r\n//                       ) : taskName}</td>\r\n//                       <td>\r\n//                         {editingReminderId === reminder.id ? (\r\n//                           <>\r\n//                             <button onClick={() => saveEditReminder(reminder.id)} style={{ backgroundColor: \"#4CAF50\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Save</button>\r\n//                             <button onClick={() => setEditingReminderId(null)} style={{ backgroundColor: \"#aaa\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Cancel</button>\r\n//                           </>\r\n//                         ) : (\r\n//                           <>\r\n//                             <button onClick={() => startEditReminder(reminder)} style={{ backgroundColor: \"#FFA500\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\", marginRight: \"0.3rem\" }}>Edit</button>\r\n//                             <button onClick={() => handleDeleteReminder(reminder.id)} style={{ backgroundColor: \"#ff4d4d\", color: \"#fff\", border: \"none\", padding: \"0.4rem 0.8rem\", borderRadius: \"5px\", cursor: \"pointer\" }}>Delete</button>\r\n//                           </>\r\n//                         )}\r\n//                       </td>\r\n//                     </tr>\r\n//                   );\r\n//                 })}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </main>\r\n\r\n//         {/* Footer */}\r\n//         <div style={{ marginTop: \"auto\", textAlign: \"center\", padding: \"1rem\", backgroundColor: \"#3D5AFE\", color: \"#fff\", borderRadius: \"10px\" }}>\r\n//           © {new Date().getFullYear()} Tasky | Built with ❤️\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport TaskForm from \"../components/TaskForm\";\r\nimport { useAuth } from \"../context/AuthContext.jsx\";\r\nimport {\r\n  getTasks,\r\n  addTask,\r\n  deleteTask,\r\n  updateTask,\r\n  getReminders,\r\n  addReminder as apiAddReminder,\r\n  updateReminder as apiUpdateReminder,\r\n  deleteReminder as apiDeleteReminder,\r\n} from \"../api\";\r\n\r\nexport default function DashboardUser() {\r\n  const { user, logout } = useAuth();\r\n  const userId = user?.id;\r\n  const navigate = useNavigate();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [reminders, setReminders] = useState([]);\r\n\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState(\"\");\r\n  const [editDesc, setEditDesc] = useState(\"\");\r\n  const [editDeadline, setEditDeadline] = useState(\"\");\r\n  const [editPriority, setEditPriority] = useState(\"\");\r\n  const [editStatus, setEditStatus] = useState(\"\");\r\n\r\n  const [editingReminderId, setEditingReminderId] = useState(null);\r\n  const [editReminderTitle, setEditReminderTitle] = useState(\"\");\r\n  const [editReminderDate, setEditReminderDate] = useState(\"\");\r\n  const [editReminderTaskId, setEditReminderTaskId] = useState(\"\");\r\n\r\n  const [newReminderTitle, setNewReminderTitle] = useState(\"\");\r\n  const [newReminderDate, setNewReminderDate] = useState(\"\");\r\n  const [newReminderTaskId, setNewReminderTaskId] = useState(\"\");\r\n\r\n  const [filterDate, setFilterDate] = useState(\"\");\r\n  const [filterPriority, setFilterPriority] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"\");\r\n\r\n  const [selectedTaskId, setSelectedTaskId] = useState(\"\");\r\n\r\n  // Fetch tasks\r\n  useEffect(() => {\r\n  if (!userId) return;\r\n  \r\n  const fetchTasksAndReminders = async () => {\r\n    try {\r\n      const response = await getTasks(userId);\r\n      const fetchedTasks = Array.isArray(response.data) ? response.data : [];\r\n      setTasks(fetchedTasks);\r\n\r\n      // Automatically fetch reminders for all tasks\r\n      const allReminders = [];\r\n      for (const task of fetchedTasks) {\r\n        const reminderRes = await getReminders(task.id);\r\n        if (Array.isArray(reminderRes.data)) {\r\n          // Attach task_id to each reminder explicitly\r\n        const remindersWithTask = reminderRes.data.map(r => ({\r\n          ...r,\r\n          task_id: task.id\r\n        }));\r\n        setRemin\r\n          allReminders.push(...remindersWithTask);\r\n        }\r\n      }\r\n      setReminders(allReminders);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks or reminders:\", error);\r\n      setTasks([]);\r\n      setReminders([]);\r\n    }\r\n  };\r\n\r\n  fetchTasksAndReminders();\r\n}, [userId]);\r\n\r\n\r\n  // Fetch reminders\r\n  // Fetch reminders for a specific task\r\nconst fetchRemindersForTask = async (taskId) => {\r\n  if (!taskId) return;\r\n  try {\r\n    const response = await getReminders(taskId); // fetch by taskId\r\n    setReminders(Array.isArray(response.data) ? response.data : []);\r\n  } catch (error) {\r\n    console.error(\"Error fetching reminders:\", error);\r\n    setReminders([]);\r\n  }\r\n};\r\n\r\n\r\n  // Task handlers\r\n  const handleTaskAdded = async (newTask) => {\r\n    try {\r\n      await addTask(userId, newTask);\r\n      const response = await getTasks(userId);\r\n      setTasks(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\r\n    try {\r\n      await deleteTask(userId, taskId);\r\n      setTasks(tasks.filter((t) => t.id !== taskId));\r\n      setReminders(reminders.filter((r) => r.task_id !== taskId));\r\n\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n      alert(\"Failed to delete task\");\r\n    }\r\n  };\r\n\r\n  const startEditTask = (task) => {\r\n    setEditingTaskId(task.id);\r\n    setEditTitle(task.title);\r\n    setEditDesc(task.description);\r\n    setEditDeadline(task.deadline_date);\r\n    setEditPriority(task.priority);\r\n    setEditStatus(task.status);\r\n  };\r\n\r\n  const saveEditTask = async (taskId) => {\r\n    try {\r\n      await updateTask(userId, taskId, {\r\n        title: editTitle,\r\n        description: editDesc,\r\n        deadline_date: editDeadline,\r\n        priority: editPriority,\r\n        status: editStatus,\r\n      });\r\n      const response = await getTasks(userId);\r\n      setTasks(Array.isArray(response.data) ? response.data : []);\r\n      setEditingTaskId(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n      alert(\"Failed to update task\");\r\n    }\r\n  };\r\n\r\n  // Reminder handlers\r\n  const handleAddReminder = async (e) => {\r\n    e.preventDefault();\r\n    if (!newReminderTitle.trim() || !newReminderDate || !newReminderTaskId) {\r\n      alert(\"Please enter title, date, and select a task.\");\r\n      return;\r\n    }\r\n\r\n    const newReminder = {\r\n      reminder_date : newReminderDate,\r\n      message : newReminderTitle,\r\n      status : \"PENDING\",\r\n    };\r\n\r\n    try {\r\n    await apiAddReminder(Number(newReminderTaskId), newReminder); // taskId-based\r\n    await fetchRemindersForTask(Number(newReminderTaskId)); // refresh reminders\r\n    setNewReminderTitle(\"\");\r\n    setNewReminderDate(\"\");\r\n    setNewReminderTaskId(\"\");\r\n  } catch (error) {\r\n      console.error(\"Error adding reminder:\", error);\r\n      alert(\"Failed to add reminder\");\r\n    }\r\n  };\r\n\r\n const handleDeleteReminder = async (reminder) => {\r\n  const taskId = Number(reminder.task_id);\r\n  if (!taskId) {\r\n    console.error(\"Invalid taskId for reminder:\", reminder);\r\n    return;\r\n  }\r\n\r\n  if (!window.confirm(\"Are you sure you want to delete this reminder?\")) return;\r\n\r\n  try {\r\n    await apiDeleteReminder(taskId, reminder.id);\r\n    await fetchRemindersForTask(reminder.task_id);\r\n  } catch (error) {\r\n    console.error(\"Error deleting reminder:\", error);\r\n    alert(\"Failed to delete reminder\");\r\n  }\r\n};\r\n\r\n  const startEditReminder = (reminder) => {\r\n    setEditingReminderId(reminder.id);\r\n    setEditReminderTitle(reminder.message);\r\n    setEditReminderDate(reminder.reminder_date);\r\n    setEditReminderTaskId(reminder.task_id ?? \"\");\r\n  };\r\n\r\n  const saveEditReminder = async (reminderId) => {\r\n  const taskId = Number(editReminderTaskId);\r\n  if (!taskId) {\r\n    alert(\"Please select a valid task for this reminder.\");\r\n    return;\r\n  }\r\n\r\n  const updatedReminder = {\r\n    message: editReminderTitle,\r\n    reminder_date: editReminderDate,\r\n    task: Number(editReminderTaskId), // <-- send just the ID\r\n    status: \"PENDING\",\r\n  };\r\n\r\n  try {\r\n    await apiUpdateReminder(Number(editReminderTaskId), reminderId, updatedReminder);\r\n    await fetchRemindersForTask((Number(editReminderTaskId))); // refresh reminders \r\n    setEditingReminderId(null);\r\n  } catch (error) {\r\n    console.error(\"Error updating reminder:\", error);\r\n    alert(\"Failed to update reminder\");\r\n  }\r\n};\r\n\r\n\r\nconst handleTaskSelection = (taskId) => {\r\n  setSelectedTaskId(taskId);\r\n  fetchRemindersForTask(taskId);\r\n};\r\n\r\n\r\n  // Stats\r\n  const stats = useMemo(() => {\r\n    const total = tasks.length;\r\n    const pending = tasks.filter((t) => t.status === \"PENDING\").length;\r\n    const complete = tasks.filter((t) => t.status === \"COMPLETE\").length;\r\n    const overdue = tasks.filter(\r\n      (t) =>\r\n        t.deadline_date &&\r\n        t.status !== \"COMPLETE\" &&\r\n        new Date(t.deadline_date) < new Date()\r\n    ).length;\r\n    return { total, pending, complete, overdue };\r\n  }, [tasks]);\r\n\r\n  const filteredTasks = tasks.filter((t) => {\r\n    const matchDate = filterDate ? t.deadline_date === filterDate : true;\r\n    const matchPriority = filterPriority ? t.priority === filterPriority : true;\r\n    const matchStatus = filterStatus ? t.status === filterStatus : true;\r\n    return matchDate && matchPriority && matchStatus;\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", minHeight: \"100vh\" }}>\r\n      <Sidebar />\r\n      <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        {/* Header */}\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            padding: \"1rem 1rem\",\r\n            backgroundColor: \"#3D5AFE\",\r\n            color: \"#fff\",\r\n            fontSize: \"1.2rem\",\r\n            fontWeight: \"bold\",\r\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\r\n            position: \"sticky\",\r\n            top: 0,\r\n            zIndex: 1000,\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <span>User Dashboard</span>\r\n          <button\r\n            onClick={() => {\r\n              logout();\r\n              navigate(\"/login\");\r\n            }}\r\n            style={{\r\n              backgroundColor: \"#ff4d4d\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              padding: \"0.5rem 1rem\",\r\n              borderRadius: \"8px\",\r\n              cursor: \"pointer\",\r\n              fontWeight: \"500\",\r\n              boxShadow: \"0 2px 6px rgba(0,0,0,0.15)\",\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n        <main\r\n          style={{\r\n            flex: 1,\r\n            padding: \"2rem\",\r\n            backgroundColor: \"#f5f7ff\",\r\n            minHeight: \"100vh\",\r\n          }}\r\n        >\r\n          <h2 style={{ color: \"#3D5AFE\", marginBottom: \"1.5rem\" }}>\r\n            Hello, {user?.name}\r\n          </h2>\r\n\r\n          {/* Stats */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              gap: \"1.5rem\",\r\n              marginBottom: \"2rem\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            {[\r\n              { label: \"Total Tasks\", value: stats.total },\r\n              { label: \"Pending\", value: stats.pending },\r\n              { label: \"Completed\", value: stats.complete },\r\n              { label: \"Overdue\", value: stats.overdue },\r\n            ].map((s, idx) => (\r\n              <div\r\n                key={idx}\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  padding: \"1.5rem\",\r\n                  borderRadius: \"10px\",\r\n                  flex: \"1 1 200px\",\r\n                  boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\",\r\n                  textAlign: \"center\",\r\n                  transition: \"transform 0.2s\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    fontSize: \"2rem\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"#3D5AFE\",\r\n                  }}\r\n                >\r\n                  {s.value}\r\n                </div>\r\n                <div style={{ color: \"#666\", marginTop: \"0.5rem\" }}>\r\n                  {s.label}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Filter Section */}\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              padding: \"1rem\",\r\n              borderRadius: \"10px\",\r\n              marginBottom: \"1.5rem\",\r\n              display: \"flex\",\r\n              gap: \"1rem\",\r\n              flexWrap: \"wrap\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"date\"\r\n              value={filterDate}\r\n              onChange={(e) => setFilterDate(e.target.value)}\r\n              style={{\r\n                padding: \"0.5rem\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            />\r\n            <select\r\n              value={filterPriority}\r\n              onChange={(e) => setFilterPriority(e.target.value)}\r\n              style={{\r\n                padding: \"0.5rem\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            >\r\n              <option value=\"\">All Priorities</option>\r\n              <option value=\"LOW\">LOW</option>\r\n              <option value=\"MEDIUM\">MEDIUM</option>\r\n              <option value=\"HIGH\">HIGH</option>\r\n            </select>\r\n            <select\r\n              value={filterStatus}\r\n              onChange={(e) => setFilterStatus(e.target.value)}\r\n              style={{\r\n                padding: \"0.5rem\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            >\r\n              <option value=\"\">All Status</option>\r\n              <option value=\"PENDING\">PENDING</option>\r\n              <option value=\"COMPLETE\">COMPLETE</option>\r\n              <option value=\"INCOMPLETE\">INCOMPLETE</option>\r\n            </select>\r\n            <button\r\n              onClick={() => {\r\n                setFilterDate(\"\");\r\n                setFilterPriority(\"\");\r\n                setFilterStatus(\"\");\r\n              }}\r\n              style={{\r\n                backgroundColor: \"#FFA500\",\r\n                color: \"#fff\",\r\n                border: \"none\",\r\n                padding: \"0.5rem 1rem\",\r\n                borderRadius: \"5px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n\r\n          {/* Tasks Section */}\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              padding: \"1.5rem\",\r\n              borderRadius: \"10px\",\r\n              boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\",\r\n              marginBottom: \"2rem\",\r\n            }}\r\n          >\r\n            <h3 style={{ color: \"#3D5AFE\", marginBottom: \"1rem\" }}>\r\n              Your Tasks\r\n            </h3>\r\n            <div style={{ marginBottom: \"1.5rem\" }}>\r\n              <TaskForm userId={userId} onTaskAdded={handleTaskAdded} />\r\n            </div>\r\n            <table\r\n              border=\"0\"\r\n              cellPadding=\"8\"\r\n              style={{\r\n                width: \"100%\",\r\n                borderCollapse: \"collapse\",\r\n                textAlign: \"center\",\r\n                minWidth: \"600px\",\r\n              }}\r\n            >\r\n              <thead style={{ backgroundColor: \"#3D5AFE\", color: \"#fff\" }}>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Date</th>\r\n                  {/* <th>Description</th>\r\n                  <th>Deadline</th>\r\n                  <th>Priority</th>\r\n                  <th>Status</th> */}\r\n                  <th>Task</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredTasks.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"4\" style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n                      No tasks found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n                {filteredTasks.map((task) => (\r\n                  <tr key={task.id} style={{ borderBottom: \"1px solid #eee\" }}>\r\n                    <td>\r\n                      {editingTaskId === task.id ? (\r\n                        <input\r\n                          value={editTitle}\r\n                          onChange={(e) => setEditTitle(e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        task.title\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingTaskId === task.id ? (\r\n                        <input\r\n                          value={editDesc}\r\n                          onChange={(e) => setEditDesc(e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        task.description\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingTaskId === task.id ? (\r\n                        <input\r\n                          type=\"date\"\r\n                          value={editDeadline}\r\n                          onChange={(e) => setEditDeadline(e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        task.deadline_date\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingTaskId === task.id ? (\r\n                        <select\r\n                          value={editPriority}\r\n                          onChange={(e) => setEditPriority(e.target.value)}\r\n                        >\r\n                          <option>LOW</option>\r\n                          <option>MEDIUM</option>\r\n                          <option>HIGH</option>\r\n                        </select>\r\n                      ) : (\r\n                        task.priority\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingTaskId === task.id ? (\r\n                        <select\r\n                          value={editStatus}\r\n                          onChange={(e) => setEditStatus(e.target.value)}\r\n                        >\r\n                          <option>PENDING</option>\r\n                          <option>COMPLETE</option>\r\n                          <option>INCOMPLETE</option>\r\n                        </select>\r\n                      ) : (\r\n                        task.status\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingTaskId === task.id ? (\r\n                        <>\r\n                          <button\r\n                            onClick={() => saveEditTask(task.id)}\r\n                            style={{\r\n                              backgroundColor: \"#4CAF50\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                              marginRight: \"0.3rem\",\r\n                            }}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                          <button\r\n                            onClick={() => setEditingTaskId(null)}\r\n                            style={{\r\n                              backgroundColor: \"#aaa\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <button\r\n                            onClick={() => startEditTask(task)}\r\n                            style={{\r\n                              backgroundColor: \"#FFA500\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                              marginRight: \"0.3rem\",\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteTask(task.id)}\r\n                            style={{\r\n                              backgroundColor: \"#ff4d4d\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Reminders Section */}\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              padding: \"1.5rem\",\r\n              borderRadius: \"10px\",\r\n              boxShadow: \"0 4px 15px rgba(0,0,0,0.1)\",\r\n            }}\r\n          >\r\n            <h3 style={{ color: \"#3D5AFE\", marginBottom: \"1rem\" }}>\r\n              Your Reminders\r\n            </h3>\r\n\r\n            {/* Add Reminder Form */}\r\n            <form\r\n              onSubmit={handleAddReminder}\r\n              style={{ display: \"flex\", gap: \"0.5rem\", marginBottom: \"1rem\" }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Reminder title\"\r\n                value={newReminderTitle}\r\n                onChange={(e) => setNewReminderTitle(e.target.value)}\r\n                style={{\r\n                  flex: 1,\r\n                  padding: \"0.5rem\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #ccc\",\r\n                }}\r\n              />\r\n              <input\r\n                type=\"datetime-local\"\r\n                value={newReminderDate}\r\n                onChange={(e) => setNewReminderDate(e.target.value)}\r\n                style={{\r\n                  flex: 1,\r\n                  padding: \"0.5rem\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #ccc\",\r\n                }}\r\n              />\r\n              <select\r\n                value={newReminderTaskId}\r\n                onChange={(e) => setNewReminderTaskId(e.target.value)}\r\n                style={{\r\n                  flex: 1,\r\n                  padding: \"0.5rem\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #ccc\",\r\n                }}\r\n              >\r\n                <option value=\"\">Select Task</option>\r\n                {tasks.map((t) => (\r\n                  <option key={t.id} value={t.id}>\r\n                    {t.title}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <button\r\n                type=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#3D5AFE\",\r\n                  color: \"#fff\",\r\n                  border: \"none\",\r\n                  padding: \"0.5rem 1rem\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Add\r\n              </button>\r\n            </form>\r\n\r\n            {/* Reminders List */}\r\n            <table\r\n              border=\"0\"\r\n              cellPadding=\"8\"\r\n              style={{\r\n                width: \"100%\",\r\n                borderCollapse: \"collapse\",\r\n                textAlign: \"center\",\r\n                minWidth: \"600px\",\r\n              }}\r\n            >\r\n              <thead style={{ backgroundColor: \"#3D5AFE\", color: \"#fff\" }}>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Date</th>\r\n                  <th>Task</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {reminders.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"4\" style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n                      No reminders found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n                {reminders.map((rem) => (\r\n                  <tr key={rem.id} style={{ borderBottom: \"1px solid #eee\" }}>\r\n                    <td>\r\n                      {editingReminderId === rem.id ? (\r\n                        <input\r\n                          value={editReminderTitle}\r\n                          onChange={(e) => setEditReminderTitle(e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        rem.message\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingReminderId === rem.id ? (\r\n                        <input\r\n                          type=\"datetime-local\"\r\n                          value={editReminderDate}\r\n                          onChange={(e) => setEditReminderDate(e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        rem.reminder_date\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingReminderId === rem.id ? (\r\n                        <select\r\n                          value={editReminderTaskId || \"\"}\r\n                          onChange={(e) => setEditReminderTaskId(e.target.value)}\r\n                        >\r\n                          {tasks.map((t) => (\r\n                            <option key={t.id} value={t.id}>\r\n                              {t.title}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        tasks.find((t) => t.id === rem.task_id)?.title || \"N/A\"\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingReminderId === rem.id ? (\r\n                        <>\r\n                          <button\r\n                            onClick={() => saveEditReminder(rem.id)}\r\n                            style={{\r\n                              backgroundColor: \"#4CAF50\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                              marginRight: \"0.3rem\",\r\n                            }}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                          <button\r\n                            onClick={() => setEditingReminderId(null)}\r\n                            style={{\r\n                              backgroundColor: \"#aaa\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <button\r\n                            onClick={() => startEditReminder(rem)}\r\n                            style={{\r\n                              backgroundColor: \"#FFA500\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                              marginRight: \"0.3rem\",\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteReminder(rem)}\r\n                            style={{\r\n                              backgroundColor: \"#ff4d4d\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              padding: \"0.4rem 0.8rem\",\r\n                              borderRadius: \"5px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </main>\r\n\r\n        {/* Footer */}\r\n        <div\r\n          style={{\r\n            marginTop: \"auto\",\r\n            textAlign: \"center\",\r\n            padding: \"1rem\",\r\n            backgroundColor: \"#3D5AFE\",\r\n            color: \"#fff\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          © {new Date().getFullYear()} Tasky | Built with ❤️\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}